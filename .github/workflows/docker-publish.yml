name: Build & Publish Auth Service

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      docker:
        image: docker:24.0-dind    # Use a stable, recent Docker version
        options: --privileged

    steps:
      # 1) Checkout your code
      - uses: actions/checkout@v4

      # 2) Set up Docker Buildx (multi-arch and caching support)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3) Log in to Docker Hub (using secrets for security)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4) Build Docker image with commit SHA tag
      - name: Build Docker image
        run: |
          docker build \
            --tag abrahambollarapu/auth-service:${{ github.sha }} \
            -f auth-service/Dockerfile \
            auth-service

      # 5) Run Auth container (wait for running)
      - name: Run Auth container
        run: |
          docker run -d \
            --name auth-service-test \
            -p 8001:8001 \
            abrahambollarapu/auth-service:${{ github.sha }}
          # Wait up to 30s for it to start
          for i in $(seq 1 10); do
            status=$(docker inspect --format='{{.State.Status}}' auth-service-test)
            if [ "$status" = "running" ]; then
              echo "✓ auth-service-test is running"
              break
            fi
            sleep 3
          done
          # Final check
          if [ "$(docker inspect --format='{{.State.Status}}' auth-service-test)" != "running" ]; then
            echo "❌ Container failed to start!"
            docker logs auth-service-test
            exit 1
          fi

      # 6) Run Postman/Newman contract tests
      - name: Run Postman contract tests
        run: |
          npm install -g newman
          npm install -g newman@^5.0.0
          newman run postman/collection.json \
            --env-var "BASE_URL=http://localhost:8001" \
            --failfast

      # 7) Tear down the test container (always)
      - name: Stop and clean up test container
        if: always()
        run: |
          docker stop auth-service-test || true
          docker rm -f auth-service-test || true

      # 8) Push to Docker Hub (if all previous steps succeeded)
      - name: Push to Docker Hub
        if: success()
        run: |
          docker tag \
            abrahambollarapu/auth-service:${{ github.sha }} \
            abrahambollarapu/auth-service:latest
          docker push abrahambollarapu/auth-service:${{ github.sha }}
          docker push abrahambollarapu/auth-service:latest
